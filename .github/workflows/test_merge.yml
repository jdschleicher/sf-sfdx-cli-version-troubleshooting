name: MERGE TEST

on:
  push: 

env:
  GITHUB_JSON:                  ${{ toJSON(github) }}
  PACKAGE_NAME:                 ${{ vars.PACKAGE_NAME }} 
  DEVHUB_ALIAS:                 "devhub"
  SIT_ALIAS:                    "sit"
  SF_SIT_AUTH_URL:              ${{ secrets.SF_SIT_AUTH_URL }}

jobs:
  skip-validation-create-package-version-job:
    runs-on: ${{ vars.GH_ACTIONS_OPERATING_SYSTEM }}

    outputs:
      packageSubscriberId: ${{ steps.create_package_version_skip_validation.outputs.packageSubscriberId }}
      packageVersion: ${{ steps.create_package_version_skip_validation.outputs.packageVersion }}
      packageTag: ${{ steps.create_package_version_skip_validation.outputs.packageTag }}
      workflow_start_time: ${{ steps.workflow_initialization.outputs.workflow_start_time }}

    steps:

      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3

      - name: SET WORKFLOW INITIALIZATION TIMESTAMP
        id: workflow_initialization
        shell: pwsh
        run: |
          Write-Host "CAPTURING TIMESTAMP ENVIRONMENT"
          $start_time = $(Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")
          "workflow_start_time=$start_time" >> $env:GITHUB_OUTPUT

      - name: INSTALL SFDX 
        run: sh 'ci-cd/install/install-sfdx.sh'

      - name: AUTHENTICATE DEVHUB AUTH URL
        env:
          DEVHUB_AUTH_URL: ${{ secrets.DEVHUB_AUTH_URL }}
        shell: pwsh
        run: . ./ci_system/sfdx/auth_url.ps1 -auth_url $env:DEVHUB_AUTH_URL -org_alias "$env:DEVHUB_ALIAS"
    
      - name: CREATE PACKAGE VERSION SKIP VALIDATION
        id: create_package_version_skip_validation  
        shell: pwsh
        run: |
            $package_version_creation_details = [PSCustomObject]@{
                'github_run_id'                      = $env:GITHUB_RUN_ID;
                'devhub_alias'                       = $env:DEVHUB_ALIAS;
                'package_name'                       = $env:PACKAGE_NAME;
                'github_json'                        = $env:GITHUB_JSON;
                'associated_skip_validation_package' = $null;
            }
            . ./ci-cd/package/skip_validation_create_package_version.ps1 -package_version_creation_details $package_version_creation_details
    
  install-skip-validation-package-to-sit:

    runs-on: ${{ vars.GH_ACTIONS_OPERATING_SYSTEM }}

    needs: [skip-validation-create-package-version-job]

    steps:

      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3

      - name: INSTALL SFDX 
        run: sh 'ci-cd/install/install-sfdx.sh'

      - name: AUTHENTICATE SIT ORG
        shell: pwsh
        run: . .\ci-cd\authenticate\authenticate-salesforce-authurl.ps1 -org_alias $env:SIT_ALIAS -auth_url $env:SF_SIT_AUTH_URL

      - name: PACKAGE INSTALL TO SIT
        shell: pwsh
        run: |
            Write-Host "here is packageSubscriberId:"
            Write-Host  ${{ steps.create_package_version_skip_validation.outputs.packageSubscriberId }}
            . ./ci-cd/package/package_version_install.ps1 -org_to_install_alias $env:SIT_ALIAS -subscriber_package_version_id ${{ needs.skip-validation-create-package-version-job.outputs.packageSubscriberId }}

      - name: DEPLOY PICKLIST FIELDS AS WORKAROUND FOR PICKLIST PACKAGE INSTALL ISSUE
        shell: pwsh
        run: |
          . ./ci-cd/metadata_customizations/picklist/picklist_package_install_workaround.ps1 -org_alias $env:SIT_ALIAS

  full-package-validation-post-merge-workflow-completion:
    runs-on: ${{ vars.GH_ACTIONS_OPERATING_SYSTEM }}

    needs: [ 
      skip-validation-create-package-version-job,
      install-skip-validation-package-to-sit
    ]

    outputs:
      github_tag: ${{ steps.create_package_version_full_validation.outputs.github_tag }}
      package_version_report: ${{ steps.create_package_version_full_validation.outputs.package_version_report }}

    steps:

      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3

      - name: INSTALL SFDX
        run: sh 'ci-cd/install/install-sfdx.sh'

      - name: AUTHENTICATE DEVHUB AUTH URL
        env:
          DEVHUB_AUTH_URL: ${{ secrets.DEVHUB_AUTH_URL }}
        shell: pwsh
        run: . ./ci_system/sfdx/auth_url.ps1 -auth_url $env:DEVHUB_AUTH_URL -org_alias "$env:DEVHUB_ALIAS"
    
      - name: CREATE PACKAGE VERSION FULL VALIDATION
        id: create_package_version_full_validation
        shell: pwsh
        run: |
          $package_version_creation_details = [PSCustomObject]@{
              'github_run_id'                              = $env:GITHUB_RUN_ID;
              'devhub_alias'                               = $env:DEVHUB_ALIAS; 
              'package_name'                               = $env:PACKAGE_NAME;
              'github_json'                                = $env:GITHUB_JSON;
              'is_full_validation'                         = $true;
              'associated_skip_validation_package'         = '${{ needs.skip-validation-create-package-version-job.outputs.packageTag }}';
              'associated_skip_validation_package_version' = '${{ needs.skip-validation-create-package-version-job.outputs.packageVersion }}'; 
          }
          . ./ci-cd/package/create_package_version_full_validation.ps1 -package_version_creation_details $package_version_creation_details
